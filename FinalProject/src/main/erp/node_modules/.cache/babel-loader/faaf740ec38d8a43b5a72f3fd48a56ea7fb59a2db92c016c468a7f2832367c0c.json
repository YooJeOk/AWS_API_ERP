{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack\\\\Project3\\\\Front_main\\\\erp\\\\src\\\\components\\\\ProductionPage9.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto'; // Chart.js에서 자동으로 필요한 요소를 불러옴\nimport './ProductionPage.css'; // 필요한 경우 스타일 연결\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductionPage9() {\n  _s();\n  const [chartData, setChartData] = useState({}); // 그래프 데이터를 관리하는 state\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  useEffect(() => {\n    // 데이터를 불러오는 부분 (추후에 비동기 통신으로 데이터를 불러올 수 있습니다)\n    const fetchData = () => {\n      const dummyData = {\n        labels: [\"2024-10-01\", \"2024-10-02\", \"2024-10-03\", \"2024-10-04\", \"2024-10-05\"],\n        datasets: [{\n          label: '생산된 양 (단위: 개)',\n          data: [40, 55, 60, 70, 85],\n          borderColor: 'rgba(75,192,192,1)',\n          backgroundColor: 'rgba(75,192,192,0.2)',\n          tension: 0.4 // 꺾은선의 곡률 조정\n        }]\n      };\n      setChartData(dummyData);\n      setIsDataLoaded(true);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"production-page9\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB0A0\\uC9DC\\uBCC4 \\uC0DD\\uC0B0 \\uC2E4\\uC801\\uC728\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), isDataLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: '생산된 양 (개)'\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: '날짜'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(ProductionPage9, \"kh9aJLTlP6nMg9kfrQW0DYRUMCw=\");\n_c = ProductionPage9;\nexport default ProductionPage9;\nvar _c;\n$RefreshReg$(_c, \"ProductionPage9\");","map":{"version":3,"names":["React","useState","useEffect","Line","jsxDEV","_jsxDEV","ProductionPage9","_s","chartData","setChartData","isDataLoaded","setIsDataLoaded","fetchData","dummyData","labels","datasets","label","data","borderColor","backgroundColor","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","scales","y","beginAtZero","title","display","text","x","_c","$RefreshReg$"],"sources":["C:/fullstack/Project3/Front_main/erp/src/components/ProductionPage9.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto'; // Chart.js에서 자동으로 필요한 요소를 불러옴\r\nimport './ProductionPage.css'; // 필요한 경우 스타일 연결\r\n\r\nfunction ProductionPage9() {\r\n    const [chartData, setChartData] = useState({}); // 그래프 데이터를 관리하는 state\r\n    const [isDataLoaded, setIsDataLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // 데이터를 불러오는 부분 (추후에 비동기 통신으로 데이터를 불러올 수 있습니다)\r\n        const fetchData = () => {\r\n            const dummyData = {\r\n                labels: [\"2024-10-01\", \"2024-10-02\", \"2024-10-03\", \"2024-10-04\", \"2024-10-05\"],\r\n                datasets: [\r\n                    {\r\n                        label: '생산된 양 (단위: 개)',\r\n                        data: [40, 55, 60, 70, 85],\r\n                        borderColor: 'rgba(75,192,192,1)',\r\n                        backgroundColor: 'rgba(75,192,192,0.2)',\r\n                        tension: 0.4, // 꺾은선의 곡률 조정\r\n                    }\r\n                ]\r\n            };\r\n            setChartData(dummyData);\r\n            setIsDataLoaded(true);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"production-page9\">\r\n            <h1>날짜별 생산 실적율</h1>\r\n            {isDataLoaded ? (\r\n                <div className=\"chart-container\">\r\n                    <Line \r\n                        data={chartData}\r\n                        options={{\r\n                            scales: {\r\n                                y: {\r\n                                    beginAtZero: true,\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: '생산된 양 (개)',\r\n                                    }\r\n                                },\r\n                                x: {\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: '날짜',\r\n                                    }\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <p>데이터를 불러오는 중입니다...</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductionPage9;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe,CAAC,CAAC;AACxB,OAAO,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,SAAS,GAAGA,CAAA,KAAM;MACpB,MAAMC,SAAS,GAAG;QACdC,MAAM,EAAE,CAAC,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC;QAC9EC,QAAQ,EAAE,CACN;UACIC,KAAK,EAAE,eAAe;UACtBC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;UAC1BC,WAAW,EAAE,oBAAoB;UACjCC,eAAe,EAAE,sBAAsB;UACvCC,OAAO,EAAE,GAAG,CAAE;QAClB,CAAC;MAET,CAAC;MACDX,YAAY,CAACI,SAAS,CAAC;MACvBF,eAAe,CAAC,IAAI,CAAC;IACzB,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BjB,OAAA;MAAAiB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBhB,YAAY,gBACTL,OAAA;MAAKgB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC5BjB,OAAA,CAACF,IAAI;QACDc,IAAI,EAAET,SAAU;QAChBmB,OAAO,EAAE;UACLC,MAAM,EAAE;YACJC,CAAC,EAAE;cACCC,WAAW,EAAE,IAAI;cACjBC,KAAK,EAAE;gBACHC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACV;YACJ,CAAC;YACDC,CAAC,EAAE;cACCH,KAAK,EAAE;gBACHC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACV;YACJ;UACJ;QACJ;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,gBAENrB,OAAA;MAAAiB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACnB,EAAA,CAzDQD,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AA2DxB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}