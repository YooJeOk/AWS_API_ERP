{"ast":null,"code":"var _jsxFileName = \"C:\\\\fullstack\\\\Project3\\\\Front_main\\\\erp\\\\src\\\\components\\\\ProductionPage9.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto'; // Chart.js에서 자동으로 필요한 요소를 불러옴\nimport './ProductionPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductionPage9() {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  useEffect(() => {\n    const fetchData = () => {\n      // 10월 1일부터 10월 31일까지 날짜 데이터 생성\n      const daysInMonth = Array.from({\n        length: 31\n      }, (_, i) => `2024-10-${i + 1}`);\n      const dummyData = {\n        labels: daysInMonth,\n        datasets: [{\n          label: '생산지시된 양 (단위: 개)',\n          data: Array.from({\n            length: 31\n          }, () => Math.floor(Math.random() * 150) + 50),\n          borderColor: 'rgba(75,192,192,1)',\n          backgroundColor: 'rgba(75,192,192,0.2)',\n          fill: true\n        }, {\n          label: '생산된 양 (단위: 개)',\n          data: Array.from({\n            length: 31\n          }, () => Math.floor(Math.random() * 150) + 50),\n          borderColor: 'rgba(0,255,0,1)',\n          backgroundColor: 'rgba(0,255,255,0.2)',\n          fill: true\n        }, {\n          label: '불량 갯수',\n          data: Array.from({\n            length: 31\n          }, () => Math.floor(Math.random() * 20) + 5),\n          borderColor: 'rgba(255,99,132,1)',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          fill: true\n        }]\n      };\n      setChartData(dummyData);\n      setIsDataLoaded(true);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    style: {\n      marginLeft: '250px'\n    },\n    children: [\" \", isDataLoaded ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        },\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(ProductionPage9, \"kh9aJLTlP6nMg9kfrQW0DYRUMCw=\");\n_c = ProductionPage9;\nexport default ProductionPage9;\nvar _c;\n$RefreshReg$(_c, \"ProductionPage9\");","map":{"version":3,"names":["React","useState","useEffect","Line","jsxDEV","_jsxDEV","ProductionPage9","_s","chartData","setChartData","isDataLoaded","setIsDataLoaded","fetchData","daysInMonth","Array","from","length","_","i","dummyData","labels","datasets","label","data","Math","floor","random","borderColor","backgroundColor","fill","className","style","marginLeft","children","options","scales","y","beginAtZero","responsive","maintainAspectRatio","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/fullstack/Project3/Front_main/erp/src/components/ProductionPage9.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto'; // Chart.js에서 자동으로 필요한 요소를 불러옴\r\nimport './ProductionPage.css'; \r\n\r\nfunction ProductionPage9() {\r\n    const [chartData, setChartData] = useState({});\r\n    const [isDataLoaded, setIsDataLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = () => {\r\n            // 10월 1일부터 10월 31일까지 날짜 데이터 생성\r\n            const daysInMonth = Array.from({ length: 31 }, (_, i) => `2024-10-${i + 1}`);\r\n\r\n            const dummyData = {\r\n                labels: daysInMonth,\r\n                datasets: [\r\n                    {\r\n                        label: '생산지시된 양 (단위: 개)',\r\n                        data: Array.from({ length: 31 }, () => Math.floor(Math.random() * 150) + 50),\r\n                        borderColor: 'rgba(75,192,192,1)',\r\n                        backgroundColor: 'rgba(75,192,192,0.2)',\r\n                        fill: true,\r\n                    },\r\n                    {\r\n                        label: '생산된 양 (단위: 개)',\r\n                        data: Array.from({ length: 31 }, () => Math.floor(Math.random() * 150) + 50),\r\n                        borderColor: 'rgba(0,255,0,1)',\r\n                        backgroundColor: 'rgba(0,255,255,0.2)',\r\n                        fill: true,\r\n                    },\r\n                    {\r\n                        label: '불량 갯수',\r\n                        data: Array.from({ length: 31 }, () => Math.floor(Math.random() * 20) + 5),\r\n                        borderColor: 'rgba(255,99,132,1)',\r\n                        backgroundColor: 'rgba(255,99,132,0.2)',\r\n                        fill: true,\r\n                    }\r\n                ]\r\n            };\r\n            setChartData(dummyData);\r\n            setIsDataLoaded(true);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"chart-container\" style={{ marginLeft: '250px' }}> {/* 차트를 오른쪽으로 조금 이동 */}\r\n            {isDataLoaded ? (\r\n                <Line data={chartData} options={{\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    },\r\n                    responsive: true,\r\n                    maintainAspectRatio: false\r\n                }} />\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductionPage9;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}